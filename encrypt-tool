#!/bin/bash

result=0;
COMMAND=$1;
INPUT_KEY=$2;
INPUT_FILE=$3;
OUTPUT_FILE=$4;
SCRIPT_NAME=$(basename "$0");
ENCRYPT_ARG="encrypt";
DECRYPT_ARG="decrypt";
GENKEYS_ARG="genkeys";

function Help() {
	printf "usage: $SCRIPT_NAME <cmd>\n";

	printf "commands: \n";
	printf "\t$ENCRYPT_ARG <public key> <input file> <output file>\n";
	printf "\t$DECRYPT_ARG <private key> <input file> <output file>\n";
	printf "\t$GENKEYS_ARG - Generates rsa keys\n";
}

function Encrypt() {
	if [ $result -eq 0 ]; then
		openssl rsautl -encrypt -inkey $INPUT_KEY -pubin -in $INPUT_FILE -out $OUTPUT_FILE;
		result=$?;
	fi 
}

function Decrypt() {
	if [ $result -eq 0 ]; then 
		openssl rsautl -decrypt -inkey $INPUT_KEY -in $INPUT_FILE > $OUTPUT_FILE;
		result=$?;
	fi
}

function GenerateKeys() {
	if [ $result -eq 0 ]; then 
		openssl genrsa -out private.key 1024;
		result=$?;
	fi

	if [ $result -eq 0 ]; then 	
		openssl rsa -in private.key -pubout -out public.key; 
		result=$?;
	fi

}

function main() {
	which openssl >/dev/null 2>&1;

	if [ $? -ne 0 ]; then 
		result=1;
		printf "Openssl does not exist on your system\n";
	fi 

	# If openssl exists, then we will continue with the process!
	if [ $result -eq 0 ]; then 
		if [[ $COMMAND == "$ENCRYPT_ARG" ]]; then
		       Encrypt;	
		elif [[ $COMMAND == "$DECRYPT_ARG" ]]; then
		       Decrypt;	
		elif [[ $COMMAND == "$GENKEYS_ARG" ]]; then 
			GenerateKeys;
		else 
			Help;
		fi
	fi 
}

main;

exit $result;
